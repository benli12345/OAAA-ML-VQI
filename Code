#R version 4.2.1
#Load VQI OAAA data (available with approval through SVS PSO https://www.vqi.org/data-analysis/)
library(readr)
data <- read_csv("data_OAAA.csv")

#Split data into train (70%) and test (30%) sets
library(caTools)
set.seed(123)
sample <- sample.split(data$MACE, SplitRatio = 0.7)
train <- subset(data, sample == TRUE)
test <- subset(data, sample == FALSE)

#Apply Random Over-Sample Examples (ROSE) for class balance on training set
library(ROSE)
train <- ROSE(MACE ~ ., data = train, N = 10000, seed = 123)$data

#Define predictors
library(dplyr)
predictors_train <- train %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test <- test %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

#Train pre-op models
library(caret)
library(xgboost)
library(ranger)
library(naivebayes)
library(e1071)
library(nnet)
train_control <- trainControl(method = "cv", number = 10) #10-fold cross-validation

#Train XGBoost
XGBgrid <- expand.grid(max_depth = c(2,3,4,5,6,7,8,9), nrounds = (1:10)*50, eta = c(0.4,0.3,0.2,0.1,0.05,0.01,0.001), gamma = c(0,0.1,1,1.5,2), subsample = c(0.5,0.6,0.7,0.8,0.9,1), min_child_weight = c(1,3,5,7,10), colsample_bytree = c(0.5,0.6,0.7,0.8,0.9,1) #XGBoost grid search for hyperparameters
XGB <- train(x = as.matrix(predictors_train), y = train$MACE, data = train, method = "xgbTree", metric = "ROC", trControl = train_control, tuneGrid = XGBgrid)

#Train random forest
RFgrid <- expand.grid(mtry = 2:4, splitrule = "gini", min.node.size = c(10,20))
RF <- train(x = predictors_train, y = train$MACE, data = train, method = "ranger", metric = "ROC", trControl = train_control, tuneGrid = RFgrid)

#Train naive bayes
NBgrid <- expand.grid(usekernel = c(TRUE, FALSE), fL = 0:5, adjust = seq(0,5,by=1))
NB <- train(x = predictors_train, y = as.factor(train$MACE), data = train, method = "naive_bayes", metric = "ROC", trControl = train_control, tuneGrid = NBgrid)

#Train support vector machine
SVMgrid <- expand.grid(C = c(0.001, 0.01, 0.1, 1, 10, 100, 10000))
SVM <- train(x = predictors_train, y = train$MACE, data = train, method = "svmRadial", metric = "ROC", trControl = train_control, tuneGrid = SVMgrid)

#Train multilayer perceptron artificial neural network
NNETgrid <- expand.grid(size = seq(1,10,by=1), decay = seq(0.1,0.5,by=0.1))
NNET <- train(x = predictors_train, y = train$MACE, data = train, method = "nnet", metric = "ROC", trControl = train_control, tuneGrid = NNETgrid)

#Train logistic regression
LRgrid <- expand.grid(C = c(0.001, 0.01, 0.1, 1, 10, 100, 10000))
LR <- train(x = predictors_train, y = train$MACE, data = train, method = "glm", metric = "ROC", trControl = train_control, tuneGrid = LRgrid, family = "binomial")

#Evaluate pre-op models on test set
library(pROC)

XGB_pred <- predict(XGB, as.matrix(predictors_test))
auc(test$MACE, XGB_pred)
ci.auc(test$MACE, XGB_pred)
XGB_pred_0.5 <- ifelse(XGB_pred > 0.5,1,0)
confusionMatrix(as.factor(test$MACE), as.factor(XGB_pred_0.5))

RF_pred <- predict(RF, predictors_test)
auc(test$MACE, RF_pred)
ci.auc(test$MACE, RF_pred)
RF_pred_0.5 <- ifelse(RF_pred > 0.5,1,0)
confusionMatrix(as.factor(test$MACE), as.factor(RF_pred_0.5))

NB_pred <- predict(NB, predictors_test)
auc(test$MACE, NB_pred)
ci.auc(test$MACE, NB_pred)
NB_pred_0.5 <- ifelse(NB_pred > 0.5,1,0)
confusionMatrix(as.factor(test$MACE), as.factor(NB_pred_0.5))

SVM_pred <- predict(SVM, predictors_test)
auc(test$MACE, SVM_pred)
ci.auc(test$MACE, SVM_pred)
SVM_pred_0.5 <- ifelse(SVM_pred > 0.5,1,0)
confusionMatrix(as.factor(test$MACE), as.factor(SVM_pred_0.5))

NNET_pred <- predict(NNET, predictors_test)
auc(test$MACE, NNET_pred)
ci.auc(test$MACE, NNET_pred)
NNET_pred_0.5 <- ifelse(NNET_pred > 0.5,1,0)
confusionMatrix(as.factor(test$MACE), as.factor(NNET_pred_0.5))

LR_pred <- predict(LR, predictors_test)
auc(test$MACE, LR_pred)
ci.auc(test$MACE, LR_pred)
LR_pred_0.5 <- ifelse(LR_pred > 0.5,1,0)
confusionMatrix(as.factor(test$MACE), as.factor(LR_pred_0.5))

#XGBoost selected as best performing model

#Generate ROC curves
library(ROCR)
XGB_perf <- prediction(XGB_pred, test$MACE)
XGB_perf <- performance(XGB_perf, "tpr", "fpr")
plot(XGB_perf)
abline(a=0,b=1)

#Generate calibration plot
library(gbm)
calibrate.plot(test$MACE, XGB_pred)

#Calculate Brier Score
library(DescTools)
BrierScore(XGB_pred, test$MACE)

#Calculate variable importance scores for top 10 predictors
importance_matrix <- xgb.importance(names(predictors_test), model = XGB)
xgb.plot.importance(importance_matrix, top_n = 10)

#Subgroup analysis based on age
test_under70 <- test[test$AGE<70, ]
test_over70 <- test[test$AGE>70, ]
predictors_test_under70 <- test_under70 %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_over70 <- test_over70 %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_under70 <- predict(XGB, as.matrix(predictors_test_under70))
auc(test_under70$MACE, pred_under70)
ci.auc(test_under70$MACE, pred_under70)

pred_over70 <- predict(XGB, as.matrix(predictors_test_over70))
auc(test_over70$MACE, pred_over70)
ci.auc(test_over70$MACE, pred_over70)

perf_under70 <- prediction(pred_under70, test_under70$MACE)
perf_under70 <- performance(perf_under70, "tpr", "fpr")

perf_over70 <- prediction(pred_over70, test_over70$MACE)
perf_over70 <- performance(perf_over70, "tpr", "fpr")

plot(perf_under70)
plot(perf_over70, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on sex
test_male <- test[test$SEX==1, ]
test_female <- test[test$SEX==2, ]
predictors_test_male <- test_male %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_female <- test_female %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_male <- predict(XGB, as.matrix(predictors_test_male))
auc(test_male$MACE, pred_male)
ci.auc(test_male$MACE, pred_male)

pred_female <- predict(XGB, as.matrix(predictors_test_female))
auc(test_female$MACE, pred_female)
ci.auc(test_female$MACE, pred_female)

perf_male <- prediction(pred_male, test_male$MACE)
perf_male <- performance(perf_male, "tpr", "fpr")

perf_female <- prediction(pred_female, test_female$MACE)
perf_female <- performance(perf_female, "tpr", "fpr")

plot(perf_male)
plot(perf_female, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on race
test_white <- test[test$RACE==5, ]
test_nonwhite <- test[test$RACE_NEW!=5, ]
predictors_test_white <- test_white %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_nonwhite <- test_nonwhite %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_white <- predict(XGB, as.matrix(predictors_test_white))
auc(test_white$MACE, pred_white)
ci.auc(test_white$MACE, pred_white)

pred_nonwhite <- predict(XGB, as.matrix(predictors_test_nonwhite))
auc(test_nonwhite$MACE, pred_nonwhite)
ci.auc(test_nonwhite$MACE, pred_nonwhite)

perf_white <- prediction(pred_white, test_white$MACE)
perf_white <- performance(perf_white, "tpr", "fpr")

perf_nonwhite <- prediction(pred_nonwhite, test_nonwhite$MACE)
perf_nonwhite <- performance(perf_nonwhite, "tpr", "fpr")

plot(perf_white)
plot(perf_nonwhite, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on ethnicity
test_hispanic <- test[test$ETHNICITY==1, ]
test_nonhispanic <- test[test$ETHNICITY==0, ]
predictors_test_hispanic <- test_hispanic %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_nonhispanic <- test_nonhispanic %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_hispanic <- predict(XGB, as.matrix(predictors_test_hispanic))
auc(test_hispanic$MACE, pred_hispanic)
ci.auc(test_hispanic$MACE, pred_hispanic)

pred_nonhispanic <- predict(XGB, as.matrix(predictors_test_nonhispanic))
auc(test_nonhispanic$MACE, pred_nonhispanic)
ci.auc(test_nonhispanic$MACE, pred_nonhispanic)

perf_hispanic <- prediction(pred_hispanic, test_hispanic$MACE)
perf_hispanic <- performance(perf_hispanic, "tpr", "fpr")

perf_nonhispanic <- prediction(pred_nonhispanic, test_nonhispanic$MACE)
perf_nonhispanic <- performance(perf_nonhispanic, "tpr", "fpr")

plot(perf_hispanic)
plot(perf_nonhispanic, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on rurality
test_rural <- test[test$RUCA==10, ]
test_nonrural <- test[test$RUCA!=10, ]
predictors_test_rural <- test_rural %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_nonrural <- test_nonrural %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_rural <- predict(XGB, as.matrix(predictors_test_rural))
auc(test_rural$MACE, pred_rural)
ci.auc(test_rural$MACE, pred_rural)

pred_nonrural <- predict(XGB, as.matrix(predictors_test_nonrural))
auc(test_nonrural$MACE, pred_nonrural)
ci.auc(test_nonrural$MACE, pred_nonrural)

perf_rural <- prediction(pred_rural, test_rural$MACE)
perf_rural <- performance(perf_rural, "tpr", "fpr")

perf_nonrural <- prediction(pred_nonrural, test_nonrural$MACE)
perf_nonrural <- performance(perf_nonrural, "tpr", "fpr")

plot(perf_rural)
plot(perf_nonrural, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on median Area Deprivation Index (ADI) percentile
test_ADIover50 <- test[test$ADI_NATRANK_MEDIAN>=50, ]
test_ADIunder50 <- test[test$ADI_NATRANK_MEDIAN<50, ]
predictors_test_ADIover50 <- test_ADIover50 %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_ADIunder50 <- test_ADIunder50 %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_ADIover50 <- predict(XGB, as.matrix(predictors_test_ADIover50))
auc(test_ADIover50$MACE, pred_ADIover50)
ci.auc(test_ADIover50$MACE, pred_ADIover50)

pred_ADIunder50 <- predict(XGB, as.matrix(predictors_test_ADIunder50))
auc(test_ADIunder50$MACE, pred_ADIunder50)
ci.auc(test_ADIunder50$MACE, pred_ADIunder50)

perf_ADIover50 <- prediction(pred_ADIover50, test_ADIover50$MACE)
perf_ADIover50 <- performance(perf_ADIover50, "tpr", "fpr")

perf_ADIunder50 <- prediction(pred_ADIunder50, test_ADIunder50$MACE)
perf_ADIunder50 <- performance(perf_ADIunder50, "tpr", "fpr")

plot(perf_ADIover50)
plot(perf_ADIunder50, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on proximal clamp site
test_infra <- test[test$PROXCLAMP == 1, ]
test_1renal <- test[test$PROXCLAMP == 2, ]
test_2renal <- test[test$PROXCLAMP == 3, ]
test_supra <- test[test$PROXCLAMP == 4, ]
predictors_test_infra <- test_infra %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_1renal <- test_1renal %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_2renal <- test_2renal %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_supra <- test_supra %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_infra <- predict(XGB, as.matrix(predictors_test_infra))
auc(test_infra$MACE, pred_infra)
ci.auc(test_infra$MACE, pred_infra)

pred_1renal <- predict(XGB, as.matrix(predictors_test_1renal))
auc(test_1renal$MACE, pred_1renal)
ci.auc(test_1renal$MACE, pred_1renal)

pred_2renal <- predict(XGB, as.matrix(predictors_test_2renal))
auc(test_2renal$MACE, pred_2renal)
ci.auc(test_2renal$MACE, pred_2renal)

pred_supra <- predict(XGB, as.matrix(predictors_test_supra))
auc(test_supra$MACE, pred_supra)
ci.auc(test_supra$MACE, pred_supra)

perf_infra <- prediction(pred_infra, test_infra$MACE)
perf_infra <- performance(perf_infra, "tpr", "fpr")

perf_1renal <- prediction(pred_1renal, test_1renal$MACE)
perf_1renal <- performance(perf_1renal, "tpr", "fpr")

perf_2renal <- prediction(pred_2renal, test_2renal$MACE)
perf_2renal <- performance(perf_2renal, "tpr", "fpr")

perf_supra <- prediction(pred_supra, test_supra$MACE)
perf_supra <- performance(perf_supra, "tpr", "fpr")

plot(perf_infra)
plot(perf_1renal, add = TRUE, col = 'blue')
plot(perf_2renal, add = TRUE, col = 'orange')
plot(perf_supra, add = TRUE, col = 'green')
abline(a=0,b=1)

#Subgroup analysis based on prior aortic surgery
test_prior <- test[test$PRIOR_AORSURG == 1, ]
test_noprior <- test[test$PRIOR_AORSURG == 0, ]
predictors_test_prior <- test_prior %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_noprior <- test_noprior %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_prior <- predict(XGB, as.matrix(predictors_test_prior))
auc(test_prior$MACE, pred_prior)
ci.auc(test_prior$MACE, pred_prior)

pred_noprior <- predict(XGB, as.matrix(predictors_test_noprior))
auc(test_noprior$MACE, pred_noprior)
ci.auc(test_noprior$MACE, pred_noprior)

perf_prior <- prediction(pred_prior, test_prior$MACE)
perf_prior <- performance(perf_prior, "tpr", "fpr")

perf_noprior <- prediction(pred_noprior, test_noprior$MACE)
perf_noprior <- performance(perf_noprior, "tpr", "fpr")

plot(perf_prior)
plot(perf_noprior, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on concurrent renal/infrainguinal bypass or other abdominal procedure
test_con <- test[test$CCRENAL == 1 | test$CCBYPASS == 1 | test$CCOTHERAB == 1, ]
test_nocon <- test[test$CCRENAL == 0 & test$CCBYPASS == 0 & test$CCOTHERAB == 0, ]
predictors_test_con <- test_con %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)
predictors_test_nocon <- test_nocon %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, COPD, DIALYSIS, ASACLASS, LIVINGSTATUS, PREOP_AMBUL, PRIOR_AORSURG, ANEURREP, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, EXP, GBODYDIA, PROXCLAMP, DISTANAST, CCRENAL, CCBYPASS, CCOTHERAB)

pred_con <- predict(XGB, as.matrix(predictors_test_con))
auc(test_con$MACE, pred_con)
ci.auc(test_con$MACE, pred_con)

pred_nocon <- predict(XGB, as.matrix(predictors_test_nocon))
auc(test_nocon$MACE, pred_nocon)
ci.auc(test_nocon$MACE, pred_nocon)

perf_con <- prediction(pred_con, test_con$MACE)
perf_con <- performance(perf_con, "tpr", "fpr")

perf_nocon <- prediction(pred_nocon, test_nocon$MACE)
perf_nocon <- performance(perf_nocon, "tpr", "fpr")

plot(perf_con)
plot(perf_nocon, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Train and evaluate XGBoost for predicting secondary outcomes

XGB_MI <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$MI), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9) #hyperparameters chosen based on above grid search and cross validation
XGB_MI_pred <- predict(XGB_MI, as.matrix(predictors_test))
auc(test$MI, XGB_MI_pred)
ci.auc(test$MI, XGB_MI_pred)
XGB_MI_pred_0.5 <- ifelse(XGB_MI_pred > 0.5,1,0)
confusionMatrix(as.factor(test$MI), as.factor(XGB_MI_pred_0.5))

XGB_stroke <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$stroke), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_stroke_pred <- predict(XGB_stroke, as.matrix(predictors_test))
auc(test$stroke, XGB_stroke_pred)
ci.auc(test$stroke, XGB_stroke_pred)
XGB_stroke_pred_0.5 <- ifelse(XGB_stroke_pred > 0.5,1,0)
confusionMatrix(as.factor(test$stroke), as.factor(XGB_stroke_pred_0.5))

XGB_death <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$death), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_death_pred <- predict(XGB_death, as.matrix(predictors_test))
auc(test$death, XGB_death_pred)
ci.auc(test$death, XGB_death_pred)
XGB_death_pred_0.5 <- ifelse(XGB_death_pred > 0.5,1,0)
confusionMatrix(as.factor(test$death), as.factor(XGB_death_pred_0.5))

XGB_dysrhythmia <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$dysrhythmia), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_dysrhythmia_pred <- predict(XGB_dysrhythmia, as.matrix(predictors_test))
auc(test$dysrhythmia, XGB_dysrhythmia_pred)
ci.auc(test$dysrhythmia, XGB_dysrhythmia_pred)
XGB_dysrhythmia_pred_0.5 <- ifelse(XGB_dysrhythmia_pred > 0.5,1,0)
confusionMatrix(as.factor(test$dysrhythmia), as.factor(XGB_dysrhythmia_pred_0.5))

XGB_CHF <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$CHF), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_CHF_pred <- predict(XGB_CHF, as.matrix(predictors_test))
auc(test$CHF, XGB_CHF_pred)
ci.auc(test$CHF, XGB_CHF_pred)
XGB_CHF_pred_0.5 <- ifelse(XGB_CHF_pred > 0.5,1,0)
confusionMatrix(as.factor(test$CHF), as.factor(XGB_CHF_pred_0.5))

XGB_pneumo <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$pneumo), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_pneumo_pred <- predict(XGB_pneumo, as.matrix(predictors_test))
auc(test$pneumo, XGB_pneumo_pred)
ci.auc(test$pneumo, XGB_pneumo_pred)
XGB_pneumo_pred_0.5 <- ifelse(XGB_pneumo_pred > 0.5,1,0)
confusionMatrix(as.factor(test$pneumo), as.factor(XGB_pneumo_pred_0.5))

XGB_reintub <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$reintub), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_reintub_pred <- predict(XGB_reintub, as.matrix(predictors_test))
auc(test$reintub, XGB_reintub_pred)
ci.auc(test$reintub, XGB_reintub_pred)
XGB_reintub_pred_0.5 <- ifelse(XGB_reintub_pred > 0.5,1,0)
confusionMatrix(as.factor(test$reintub), as.factor(XGB_reintub_pred_0.5))

XGB_AKI <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$AKI), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_AKI_pred <- predict(XGB_AKI, as.matrix(predictors_test))
auc(test$AKI, XGB_AKI_pred)
ci.auc(test$AKI, XGB_AKI_pred)
XGB_AKI_pred_0.5 <- ifelse(XGB_AKI_pred > 0.5,1,0)
confusionMatrix(as.factor(test$AKI), as.factor(XGB_AKI_pred_0.5))

XGB_LEI <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$LEI), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_LEI_pred <- predict(XGB_LEI, as.matrix(predictors_test))
auc(test$LEI, XGB_LEI_pred)
ci.auc(test$LEI, XGB_LEI_pred)
XGB_LEI_pred_0.5 <- ifelse(XGB_LEI_pred > 0.5,1,0)
confusionMatrix(as.factor(test$LEI), as.factor(XGB_LEI_pred_0.5))

XGB_bowel <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$bowel), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_bowel_pred <- predict(XGB_bowel, as.matrix(predictors_test))
auc(test$bowel, XGB_bowel_pred)
ci.auc(test$bowel, XGB_bowel_pred)
XGB_bowel_pred_0.5 <- ifelse(XGB_bowel_pred > 0.5,1,0)
confusionMatrix(as.factor(test$bowel), as.factor(XGB_bowel_pred_0.5))

XGB_wound <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$wound), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_wound_pred <- predict(XGB_wound, as.matrix(predictors_test))
auc(test$wound, XGB_wound_pred)
ci.auc(test$wound, XGB_wound_pred)
XGB_wound_pred_0.5 <- ifelse(XGB_wound_pred > 0.5,1,0)
confusionMatrix(as.factor(test$wound), as.factor(XGB_wound_pred_0.5))

XGB_RTOR <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$RTOR), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_RTOR_pred <- predict(XGB_RTOR, as.matrix(predictors_test))
auc(test$RTOR, XGB_RTOR_pred)
ci.auc(test$RTOR, XGB_RTOR_pred)
XGB_RTOR_pred_0.5 <- ifelse(XGB_RTOR_pred > 0.5,1,0)
confusionMatrix(as.factor(test$RTOR), as.factor(XGB_RTOR_pred_0.5))

XGB_non_home_dc <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$non_home_dc), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 1, subsample = 1)
XGB_non_home_dc_pred <- predict(XGB_non_home_dc, as.matrix(predictors_test))
auc(test$non_home_dc, XGB_non_home_dc_pred)
ci.auc(test$non_home_dc, XGB_non_home_dc_pred)
XGB_non_home_dc_pred_0.5 <- ifelse(XGB_non_home_dc_pred > 0.5,1,0)
confusionMatrix(as.factor(test$non_home_dc), as.factor(XGB_non_home_dc_pred_0.5))

XGB_death1yr <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$death1yr), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 0.9, subsample = 0.9)
XGB_death1yr_pred <- predict(XGB_death1yr, as.matrix(predictors_test))
auc(test$death1yr, XGB_death1yr_pred)
ci.auc(test$death1yr, XGB_death1yr_pred)
XGB_death1yr_pred_0.5 <- ifelse(XGB_death1yr_pred > 0.5,1,0)
confusionMatrix(as.factor(test$death1yr), as.factor(XGB_death1yr_pred_0.5))

XGB_reint1yr <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$reint1yr), nrounds = 150, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 1, subsample = 1)
XGB_reint1yr_pred <- predict(XGB_reint1yr, as.matrix(predictors_test))
auc(test$reint1yr, XGB_reint1yr_pred)
ci.auc(test$reint1yr, XGB_reint1yr_pred)
XGB_reint1yr_pred_0.5 <- ifelse(XGB_reint1yr_pred > 0.5,1,0)
confusionMatrix(as.factor(test$reint1yr), as.factor(XGB_reint1yr_pred_0.5))
